name: Testing Application With Container
on:
  workflow_call:
    inputs:
      environment:
        type: string
      docker_image_name:
        type: string
        required: true
      docker_image_tag:
        type: string
        required: true
      container_name: 
        type: string
        required: true
      app_port: 
        type: string
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and load Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: |
            ${{ env.docker_image_name }}:${{ env.doceker_image_tag }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.docker_image_name }}:${{ env.doceker_image_tag }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.docker_image_name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run application container
        run: |
          docker run -d \
            -p ${{ env.app_port }}:${{ env.app_port }} \
            --name ${{ env.container_name }} \
            --health-cmd="curl -f http://localhost:${{ env.app_port }} || exit 1" \
            --health-interval=5s \
            --health-timeout=3s \
            --health-retries=3 \
            ${{ env.docker_image_name }}:${{image_tag}}

      - name: View container logs on failure
        if: failure()
        run: docker logs ${{ env.container_name }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.docker_image_name }}:${{image_tag}}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.docker_image_name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cleanup
        if: always()
        run: |
          docker stop ${{ env.container_name }} || true
          docker rm ${{ env.container_name }} || true