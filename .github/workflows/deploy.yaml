name: Deploy the application
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 ansible

      - name: Verify Ansible installation
        run: ansible --version

      - name: Install Ansible collections and roles
        run: |
          ansible-galaxy collection install amazon.aws community.aws
          ansible-galaxy role install geerlingguy.docker

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/dev-server.pem
          chmod 600 ~/.ssh/dev-server.pem

      - name: Create Ansible vault password file
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ~/.vault_password
          chmod 600 ~/.vault_password

      - name: Run Ansible playbook
        working-directory: ./ansible
        run: |
          ansible-playbook playbook.yaml \
            -e ansible_private_key_file=~/.ssh/dev-server.pem \
            -e ENVIRONMENT=dev \
            -e DOCKER_IMAGE_TAG=${{ github.sha }} \
            --vault-password-file ~/.vault_password

      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f ~/.ssh/dev-server.pem
          rm -f ~/.vault_password